name: Build LaTeX document
on: 
  workflow_call:
    inputs:
      root:
        description: Specify which template folder to be compiled
        type: string
        required: true
      texfile:
        description: The main LaTeX file to compile
        type: string
        required: true

env:
  OUTPUT_DIR: 'github_artifacts'

jobs:
  build_latex:
    runs-on: ubuntu-latest
    steps:
    - name: Setup repository
      uses: actions/checkout@v2

    - name: List files
      working-directory: ${{ github.event.inputs.root }}
      run: ls -R

    # Cache packages
    - uses: actions/cache@v2
      id: cache-packages
      with:
        path: ${{ runner.temp }}/cache-linux
        key: cache-packages-${{ runner.os }}

    # Install packages with cache
    - name: Install packages
      uses: airvzxf/cache-anything-new-action@v1.0
      with:
        script: 'latex-install.sh'
        is_cached: ${{ steps.cache-packages.outputs.cache-hit }}
        cache: ${{ runner.temp }}/cache-linux

    # Install latex dependencies without cache
    # - name: Install latex dependencies
    #   working-directory: ${{ github.event.inputs.root }}
    #   run: sudo apt-get update && sudo apt-get install texlive texlive-xetex texlive-publishers texlive-science texlive-bibtex-extra biber latexmk cm-super

    - name: First document compliation
      working-directory: ${{ github.event.inputs.root }}
      continue-on-error: true
      run: xelatex ${{ github.event.inputs.texfile }}

    # For bibtex
    - name: Bibliography compliation
      working-directory: ${{ github.event.inputs.root }}
      continue-on-error: true
      run: bibtex ${{ github.event.inputs.texfile }}
    # For biber
    # - name: Bibliography compliation
    #   continue-on-error: true
    #   run: biber ${{ github.event.inputs.texfile }}

    - name: Second document compliation
      working-directory: ${{ github.event.inputs.root }}
      continue-on-error: true
      run: xelatex ${{ github.event.inputs.texfile }}; xelatex ${{ github.event.inputs.texfile }};

    - name: List files
      working-directory: ${{ github.event.inputs.root }}
      run: ls -R
    - name: Move PDF to artifacts
      run: mkdir -p ${{ env.OUTPUT_DIR }} && mv ./${{ github.event.inputs.root }}/${{ github.event.inputs.texfile }}.pdf ./${{ env.OUTPUT_DIR }}/

    - name: List files
      run: ls -R
    - name: Upload PDF as artifact
      uses: actions/upload-artifact@v2
      with:
        name: ${{ github.event.inputs.texfile }}.pdf
        path: ./${{ env.OUTPUT_DIR }}
